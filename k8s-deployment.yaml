# Kubernetes deployment for Interactive Agentic Web Scraper & RAG System
apiVersion: v1
kind: Namespace
metadata:
  name: scrapemaster
---
apiVersion: v1
kind: Secret
metadata:
  name: scrapemaster-secrets
  namespace: scrapemaster
type: Opaque
stringData:
  SUPABASE_URL: "your_supabase_url_here"
  SUPABASE_KEY: "your_supabase_key_here"
  AZURE_OPENAI_API_KEY: "your_azure_openai_api_key_here"
  AZURE_OPENAI_ENDPOINT: "https://your-resource-name.openai.azure.com"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: scrapemaster-config
  namespace: scrapemaster
data:
  AZURE_OPENAI_API_VERSION: "2024-02-15-preview"
  AZURE_CHAT_MODEL: "gpt-4o"
  AZURE_EMBEDDING_MODEL: "text-embedding-ada-002"
  BROWSER_CONTROL_TYPE: "simulated"
  EMBEDDING_BATCH_SIZE: "20"
  WEB_CACHE_EXPIRY_HOURS: "24"
  LOG_LEVEL: "INFO"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scrapemaster-backend
  namespace: scrapemaster
spec:
  replicas: 2
  selector:
    matchLabels:
      app: scrapemaster-backend
  template:
    metadata:
      labels:
        app: scrapemaster-backend
    spec:
      containers:
      - name: backend
        image: scrapemaster/backend:latest
        ports:
        - containerPort: 8000
        env:
        - name: SUPABASE_URL
          valueFrom:
            secretKeyRef:
              name: scrapemaster-secrets
              key: SUPABASE_URL
        - name: SUPABASE_KEY
          valueFrom:
            secretKeyRef:
              name: scrapemaster-secrets
              key: SUPABASE_KEY
        - name: AZURE_OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: scrapemaster-secrets
              key: AZURE_OPENAI_API_KEY
        - name: AZURE_OPENAI_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: scrapemaster-secrets
              key: AZURE_OPENAI_ENDPOINT
        envFrom:
        - configMapRef:
            name: scrapemaster-config
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: scrapemaster-backend-service
  namespace: scrapemaster
spec:
  selector:
    app: scrapemaster-backend
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scrapemaster-frontend
  namespace: scrapemaster
spec:
  replicas: 2
  selector:
    matchLabels:
      app: scrapemaster-frontend
  template:
    metadata:
      labels:
        app: scrapemaster-frontend
    spec:
      containers:
      - name: frontend
        image: scrapemaster/frontend:latest
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: scrapemaster-frontend-service
  namespace: scrapemaster
spec:
  selector:
    app: scrapemaster-frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: scrapemaster-ingress
  namespace: scrapemaster
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - yourdomain.com
    secretName: scrapemaster-tls
  rules:
  - host: yourdomain.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: scrapemaster-backend-service
            port:
              number: 8000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: scrapemaster-frontend-service
            port:
              number: 80
