# Azure Container Apps Deployment Configuration
# Interactive Agentic Web Scraper & RAG System

apiVersion: v1
kind: ConfigMap
metadata:
  name: scrapemaster-config
data:
  AZURE_OPENAI_API_VERSION: "2024-12-01-preview"
  AZURE_CHAT_MODEL: "gpt-4o"
  AZURE_EMBEDDING_MODEL: "text-embedding-ada-002"
  BROWSER_CONTROL_TYPE: "simulated"
  EMBEDDING_BATCH_SIZE: "20"
  WEB_CACHE_EXPIRY_HOURS: "24"
  LOG_LEVEL: "INFO"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scrapemaster-backend
  labels:
    app: scrapemaster-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: scrapemaster-backend
  template:
    metadata:
      labels:
        app: scrapemaster-backend
    spec:
      containers:
      - name: backend
        image: scrapemaster/backend:latest
        ports:
        - containerPort: 8000
        env:
        - name: SUPABASE_URL
          value: "https://slkzwhpfeauezoojlvou.supabase.co"
        - name: SUPABASE_KEY
          value: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNsa3p3aHBmZWF1ZXpvb2psdm91Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcyMTQ0NTEsImV4cCI6MjA2Mjc5MDQ1MX0.uLsJt6GijTe_2MJ0Ckoux9wQrp-Kr6mR43wXPrCYYDQ"
        - name: AZURE_OPENAI_API_KEY
          value: "BuVHZw4d7OmEwH5QIsvw8gsKLyRxNUow4PT1gYg83iukV6JLRVL8JQQJ99BDACHYHv6XJ3w3AAAAACOGR8LC"
        - name: AZURE_OPENAI_ENDPOINT
          value: "https://practicehub3994533910.cognitiveservices.azure.com/"
        envFrom:
        - configMapRef:
            name: scrapemaster-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: scrapemaster-backend-service
spec:
  selector:
    app: scrapemaster-backend
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scrapemaster-frontend
  labels:
    app: scrapemaster-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: scrapemaster-frontend
  template:
    metadata:
      labels:
        app: scrapemaster-frontend
    spec:
      containers:
      - name: frontend
        image: scrapemaster/frontend:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: scrapemaster-frontend-service
spec:
  selector:
    app: scrapemaster-frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: LoadBalancer

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: scrapemaster-ingress
  annotations:
    kubernetes.io/ingress.class: "azure/application-gateway"
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: scrapemaster.yourdomain.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: scrapemaster-backend-service
            port:
              number: 8000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: scrapemaster-frontend-service
            port:
              number: 80
