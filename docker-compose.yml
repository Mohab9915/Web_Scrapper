version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: scrapemaster-backend
    ports:
      - "8000:8000"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION}
      - AZURE_CHAT_MODEL=${AZURE_CHAT_MODEL}
      - AZURE_EMBEDDING_MODEL=${AZURE_EMBEDDING_MODEL}
      - BROWSER_CONTROL_TYPE=${BROWSER_CONTROL_TYPE:-simulated}
      - BROWSERLESS_API_KEY=${BROWSERLESS_API_KEY}
      - FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY}
      - EMBEDDING_BATCH_SIZE=${EMBEDDING_BATCH_SIZE:-20}
      - WEB_CACHE_EXPIRY_HOURS=${WEB_CACHE_EXPIRY_HOURS:-24}
    volumes:
      - ./backend/logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: scrapemaster-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  default:
    name: scrapemaster-network
